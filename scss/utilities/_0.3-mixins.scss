// ==========================================================================
// Mixins
// ==========================================================================


// BEM selectors

@mixin e($element) {
  &__#{"" + $element} {
    @content;
  }
}
@mixin m($modifier) {
  &--#{$modifier} {
    @content;
  }
}

// Media Queries Device Specific

@mixin device($break){
  @if $break == "iPhone4__pl" {
    @media only screen 
      and (min-device-width: 320px) 
      and (max-device-width: 480px)
      and (-webkit-min-device-pixel-ratio: 2) {
      @content;
    }
  }

  @else if $break == "iPhone4__p" {
    @media only screen 
      and (min-device-width: 320px) 
      and (max-device-width: 480px)
      and (-webkit-min-device-pixel-ratio: 2)
      and (orientation: portrait)
      and (max-device-height: 480px) {
        @content;
    }

  }

  @else if $break == "iPhone4__l" {
    @media only screen 
      and (max-device-width: 480px)
      and (-webkit-min-device-pixel-ratio: 2)
      and (device-height: 320px)
      and (orientation: landscape) {
        @content;
    }

  }

  @else if $break == "iPhone5__pl" {
      @media only screen 
      and (min-device-width: 320px) 
      and (max-device-width: 568px)
      and (-webkit-min-device-pixel-ratio: 2) {
        @content;
    }
  }

  @else if $break == "iPhone5__p" {
    @media only screen 
      and (min-device-width: 320px) 
      and (max-device-width: 568px)
      and (-webkit-min-device-pixel-ratio: 2)
      and (orientation: portrait) {
        @content;
    }
  }

  @else if $break == "iPhone5__l" {
    @media only screen 
      and (min-device-width: 320px) 
      and (max-device-width: 568px)
      and (-webkit-min-device-pixel-ratio: 2)
      and (orientation: landscape) {
        @content;
    }

  }

  @else if $break == "iPhone6__pl" {
      @media only screen 
        and (min-device-width: 375px) 
        and (max-device-width: 667px) 
        and (-webkit-min-device-pixel-ratio: 2) { 
          @content;
      }
  }

  @else if $break == "iPhone6__p" {
    @media only screen 
      and (min-device-width: 375px) 
      and (max-device-width: 667px) 
      and (-webkit-min-device-pixel-ratio: 2)
      and (orientation: portrait) { 
          @content;
    }
  } 

  @else if $break == "iPhone6__l" {
    @media only screen 
      and (min-device-width: 375px) 
      and (max-device-width: 667px) 
      and (-webkit-min-device-pixel-ratio: 2)
      and (orientation: landscape) { 
          @content;
    }

  }

  @else if $break == "iPhone6p__pl" {
      @media only screen 
        and (min-device-width: 414px) 
        and (max-device-width: 736px) 
        and (-webkit-min-device-pixel-ratio: 3) { 
          @content;
      } 

  }

  @else if $break == "iPhone6p__p" {
      @media only screen 
        and (min-device-width: 414px) 
        and (max-device-width: 736px) 
        and (-webkit-min-device-pixel-ratio: 3)
        and (orientation: portrait) { 
          @content;
      }

  }

  @else if $break == "iPhone6p__l" {
        @media only screen 
          and (min-device-width: 414px) 
          and (max-device-width: 736px) 
          and (-webkit-min-device-pixel-ratio: 3)
          and (orientation: landscape) { 
            @content;
        }
  }

  @else if $break == "galaxyS3__pl" {
      @media screen 
        and (device-width: 320px) 
        and (device-height: 640px) 
        and (-webkit-device-pixel-ratio: 2) {
          @content;
      }
  }

  @else if $break == "galaxyS3__p" {
        @media screen 
        and (device-width: 320px) 
        and (device-height: 640px) 
        and (-webkit-device-pixel-ratio: 2) 
        and (orientation: portrait) {
          @content;
    }
  }

  @else if $break == "galaxyS3__l" {
      @media screen 
      and (device-width: 320px) 
      and (device-height: 640px) 
      and (-webkit-device-pixel-ratio: 2) 
      and (orientation: landscape) {
        @content;
    }
  }

  @else if $break == "galaxyS4__pl" {
    @media screen 
      and (device-width: 360px) 
      and (device-height: 640px) 
      and (-webkit-device-pixel-ratio: 3) {
        @content;
    }

  }

  @else if $break == "galaxyS4__p" {
    @media screen 
      and (device-width: 360px) 
      and (device-height: 640px) 
      and (-webkit-device-pixel-ratio: 3) 
      and (orientation: portrait) {
        @content;
    }
  }

  @else if $break == "galaxyS4__l" {
    @media screen 
      and (device-width: 360px) 
      and (device-height: 640px) 
      and (-webkit-device-pixel-ratio: 3) 
      and (orientation: landscape) {
        @content;
    }
  }

  @else if $break == "galaxyS5__pl" {
      @media screen 
      and (device-width: 360px) 
      and (device-height: 640px) 
      and (-webkit-device-pixel-ratio: 3) {
        @content;
    }
  }

  @else if $break == "galaxyS5__p" {
      @media screen 
      and (device-width: 360px) 
      and (device-height: 640px) 
      and (-webkit-device-pixel-ratio: 3) 
      and (orientation: portrait) {
        @content;
    }

  }

  @else if $break == "galaxyS5__l" {
      @media screen 
      and (device-width: 360px) 
      and (device-height: 640px) 
      and (-webkit-device-pixel-ratio: 3) 
      and (orientation: landscape) {
        @content;
    }
  }

  @else {
    @error "Whoops! No value could be retrieved for `#{$break}`. "
  }
}

// Media queries

@mixin mq($break) {
  @if $break == "iphone4" {
    @media (max-width: $brkpoint-iphone4 +1) {
      @content;
    }
  }

  @else if $break == "iphone6p" {
    @media (max-width: $brkpoint-iphone6p +1) {
      @content;
    }
  }

  @else if $break == "phone" {
    @media (max-width: $brkpoint-phone + 1) {
      @content;
    }
  }

  @else if $break == "tablet" {
    @media (max-width: $brkpoint-tablet +1) {
      @content;
    }
  }
  @else if $break == "desktop-sm" {
    @media (max-width: $brkpoint-desktop-sm +1) {
      @content;
    }
  }
  @else if $break == "desktop" {
    @media (max-width: $brkpoint-desktop +1) {
      @content;
    }
  }
  @else if $break == "large" {
    @media (max-width: $brkpoint-large + 1) {
      @content;
    }
  }
  @else if $break == "xlarge" {
    @media (max-width: $brkpoint-xlarge + 1) {
      @content;
    }
  }

    @else if $break == "phone__ls" {
    @media screen and (max-width: 900px) and (orientation: landscape){
      @content;
    }
  }


  @else if $break == "tablet_ls" {
  @media only screen 
  and (min-device-width: 768px) 
  and (max-device-width: 1024px) 
  and (orientation: landscape) 
  and (-webkit-min-device-pixel-ratio: 1) {
        @content;
    }
  }

  @else if $break == "iphone6p_ls" {
    @media screen and (device-width: $brkpoint-iphone6p_ls) and (orientation: landscape){
      @content
    }
  }

   @else {
    @error "Whoops! No value could be retrieved for `#{$break}`. "
  }
}

@mixin mqm($break) {
  @if $break == "iphone4" {
    @media (min-width: $brkpoint-iphone4) {
      @content;
    }
  }
  @else if $break == "phone" {
    @media (min-width: $brkpoint-phone) {
      @content;
    }
  }
  @else if $break == "tablet" {
    @media (min-width: $brkpoint-tablet + 1) {
      @content;
    }
  }
  @else if $break == "desktop" {
    @media (min-width: $brkpoint-desktop) {
      @content;
    }
  }
  @else if $break == "large" {
    @media (min-width: $brkpoint-large) {
      @content;
    }
  }
   @else {
    @error "Whoops! No value could be retrieved for `#{$break}`. "
  }
}

// Alpha Background

@mixin alpha-background-color($color, $background) {
  $percent: alpha($color) * 100%;
  $opaque: opacify($color, 1);
  $solid-color: mix($opaque, $background, $percent);
  background-color: $solid-color;
  background-color: $color;
}      

// IE Mixin

@mixin ie($ver) {
    @each $v in $ver {
        html.ie#{$v} & {
            @content;
        }
    }
}

@mixin browser($ver) {
    @each $v in $ver {
        html.#{$v} & {
            @content;
        }
    }
}




// ==========================================================================
// Linear Gradient
// ==========================================================================

@mixin linearGradient($top, $bottom){
    background: $top; /* Old browsers */
    background: -moz-linear-gradient(top,  $top 0%, $bottom 100%); /* FF3.6+ */
    background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,$top), color-stop(100%,$bottom)); /* Chrome,Safari4+ */
    background: -webkit-linear-gradient(top,  $top 0%,$bottom 100%); /* Chrome10+,Safari5.1+ */
    background: -o-linear-gradient(top,  $top 0%,$bottom 100%); /* Opera 11.10+ */
    background: -ms-linear-gradient(top,  $top 0%,$bottom 100%); /* IE10+ */
    background: linear-gradient(to bottom,  $top 0%,$bottom 100%); /* W3C */
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#{$top}', endColorstr='#{$bottom}',GradientType=0 ); /* IE6-9 */
    // filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ffffff', endColorstr='#000000',GradientType=0 ); /* IE6-9 */
}


// ==========================================================================
// Border Radius
// ==========================================================================

@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  border-radius: $radius;
  background-clip: padding-box;  /* stops bg color from leaking outside the border: */
}

// Single side border-radius

@mixin border-top-radius($radius) {
  -webkit-border-top-right-radius: $radius;
  border-top-right-radius: $radius;
   -webkit-border-top-left-radius: $radius;
   border-top-left-radius: $radius;
   background-clip: padding-box;
}
@mixin border-right-radius($radius) {
  -webkit-border-bottom-right-radius: $radius;
  border-bottom-right-radius: $radius;
     -webkit-border-top-right-radius: $radius;
     border-top-right-radius: $radius;
     background-clip: padding-box;
}
@mixin border-bottom-radius($radius) {
  -webkit-border-bottom-right-radius: $radius;
  border-bottom-right-radius: $radius;
   -webkit-border-bottom-left-radius: $radius;
   border-bottom-left-radius: $radius;
   background-clip: padding-box;
}
@mixin border-left-radius($radius) {
  -webkit-border-bottom-left-radius: $radius;
  border-bottom-left-radius: $radius;
     -webkit-border-top-left-radius: $radius;
     border-top-left-radius: $radius;
     background-clip: padding-box;
}


// ==========================================================================
// Opacity
// ==========================================================================
@mixin Opacity($value){
  $IEValue: $value*100;
  opacity: $value;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity="+$IEValue+")";
  filter: alpha(opacity=$IEValue);

  // opacity: $opacity;
  // $opacity-ie: $opacity * 100;
  // filter: alpha(opacity=$opacity-ie); //IE8
}


// ==========================================================================
// Transition
// ==========================================================================
@mixin transition($args...) {
  -webkit-transition: $args;
  -moz-transition: $args;
  -ms-transition: $args;
  -o-transition: $args;
  transition: $args;
}



/*Image Rotate 45 Degree*/
// ==========================================================================
// Image Rotate in Degree
// ==========================================================================
@mixin rotate( $degrees ) {
  -webkit-transform: rotate(#{$degrees}deg);
  -moz-transform: rotate(#{$degrees}deg);
  -ms-transform: rotate(#{$degrees}deg);
  -o-transform: rotate(#{$degrees}deg);
  transform: rotate(#{$degrees}deg);

  filter:  progid:DXImageTransform.Microsoft.Matrix(sizingMethod='auto expand', M11=#{cos($degrees)}, M12=-#{sin($degrees)}, M21=#{sin($degrees)}, M22=#{cos($degrees)});
  -ms-filter: "progid:DXImageTransform.Microsoft.Matrix(sizingMethod='auto expand', M11=#{cos($degrees)}, M12=-#{sin($degrees)}, M21=#{sin($degrees)}, M22=#{cos($degrees)})";
  zoom: 1;
}
